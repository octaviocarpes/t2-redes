import client from "./api.js";
import readFile from "../util/readFile.js";
const SERVER_PORT = 41234;
const SERVER_ADDRESS = "localhost";

let lastAck = 0;
let offset = 0;
let slowStartSize = 1;

const file = readFile("src/client/text.txt"); // 3008
const fileSize = file.length;

const sendData = () => {
    console.log(`sending ${offset} ${slowStartSize}`);
    return new Promise((resolve, reject) => {
        client.send(file, offset, 1000, (err) => {
            if (err) {
                reject();
            } else {
                resolve();
            }
        });
    });
};

const sequencialSend = async (count) => {
    for (let i = 1; i <= count; i++) {
        if (offset < fileSize) {
            await sendData();
            offset += 1000;
        }
    }
};

client.on("message", async (msg, rinfo) => {
    console.log(`client got: ${msg} from ${rinfo.address}:${rinfo.port}`);
    // if ack for igual ao anterior troca pra 1 e comeca dnv
    const ack = parseInt(`${msg}`.split("-")[1]);

    if (ack === file.length) return;

    if (ack === offset) {
        slowStartSize = slowStartSize * 2;
        await sequencialSend(slowStartSize);
        return;
    }
    /* if (ack === offset) {
        slowStartSize = 1;
    } else {
        if (offset === 0) {
            offset = ack;
            slowStartSize = slowStartSize * 2;
            await sequencialSend(slowStartSize);
        } else {
            slowStartSize = slowStartSize * 2;
        }
    }
    if (ack === slowStartSize * 1471 + 1471) {
        return;
    }
    await sequencialSend(slowStartSize);*/
});

client.connect(SERVER_PORT, SERVER_ADDRESS, async () => {
    console.log("Client connected!");
    await sendData();
    offset += 1000;
});
